from model.data_processing.docs_processing import *
from sentence_transformers import SentenceTransformer

# Загружаем модель для создания embedding-векторов
model = SentenceTransformer('paraphrase-multilingual-MiniLM-L12-v2')
multi_q = SentenceTransformer('sentence-transformers/multi-qa-MiniLM-L6-cos-v1')
from transformers import AutoTokenizer, pipeline
import torch
import re
# Модель
model_generate = "recoilme/Gemma-2-Ataraxy-Gemmasutra-9B-slerp"
# Инициализация токенайзера
tokenizer = AutoTokenizer.from_pretrained(model_generate)


# Инициализация пайплайна
pipeline_gen = pipeline(
    "text-generation",
    model=model_generate,
    torch_dtype=torch.float16,
    device=0,
)



# считаем данные с файла
with open('./data/data.md') as f:
    text = []
    full_text = []
    for i in f:
        full_text.append(i)
        i=i.replace('\n', '')
        i=remove_punctuation(i)
        if len(i.strip()) != 0:
            text.append(i)




def answer_generate(question, context, history):
    # Сообщения
    messages = history + [
        {"role": "user", "content": f"Дай часть текста из документации приложения по которой я задам вопрос"},
        {"role": "assistant", "content": f"Текст из документации приложения на: {context}"},
        {"role": "user", "content": f'основываясь на данном тобой тексте дай развернутый ответ на мой вопрос от имени разработчика платформы, но при этом не придумывай ничего, если ответа в твоем тексте нет, но тема приложения та же напиши только "нет ответа" и ничего более, если вопрос вообще не относится к теме приложения напиши только "нет темы" и ничего больше, вот сам вопрос: {question}'}
    ]
    print(context)
    # Применяем шаблон для подготовки сообщений
    prompt = tokenizer.apply_chat_template(messages, tokenize=False, add_generation_prompt=True)
    outputs = pipeline_gen(prompt, max_new_tokens=512, do_sample=True, temperature=0.8, top_k=65, top_p=0.9)
    return re.split(r'<start_of_turn>model\n', outputs[0]["generated_text"])[-1]
     

def response(question, history):
    real_categories = ['FJJFKAKFAJFJAFKJAKFA:JF:LJA:LJF:LDAJFALDSJFLSJAf', 'О СИСТЕМЕ. Наименование и обозначение системы', 'О СИСТЕМЕ. Область применения системы', 'О СИСТЕМЕ. Основные функции системы', 'О СИСТЕМЕ. Роли пользователей', 
                       'РАБОТА В СИСТЕМЕ. Запуск системы', 'РАБОТА В СИСТЕМЕ. Авторизация', 'РАБОТА В СИСТЕМЕ. Просмотр информации о системе', 'РАБОТА В СИСТЕМЕ. Настройка шлюзов автоматизации. Добавление шлюза',
                       'РАБОТА В СИСТЕМЕ. Настройка шлюзов автоматизации. Статусы шлюза', 'РАБОТА В СИСТЕМЕ. Настройка шлюзов автоматизации. Состояния шлюза', 'РАБОТА В СИСТЕМЕ. Настройка шлюзов автоматизации. Удаление шлюза',
                       'РАБОТА В СИСТЕМЕ. Управление учетными записями. Создание УЗ', 'РАБОТА В СИСТЕМЕ. Управление учетными записями. Редактирование УЗ', 'РАБОТА В СИСТЕМЕ. Управление учетными записями. Удаление УЗ',
                       'РАБОТА В СИСТЕМЕ. Иерархия моделей ПО. Уровни моделей ПО', 'РАБОТА В СИСТЕМЕ. Иерархия моделей ПО. Создание модели ПО', 'РАБОТА В СИСТЕМЕ. Иерархия моделей ПО. Добавление связей между моделями ПО',
                       'РАБОТА В СИСТЕМЕ. Иерархия моделей ПО. Переименование модели ПО', 'РАБОТА В СИСТЕМЕ. Иерархия моделей ПО. Редактирование свойств модели ПО', 'РАБОТА В СИСТЕМЕ. Иерархия моделей ПО. Редактирование свойств применимости модели ПО',
                       'РАБОТА В СИСТЕМЕ. Иерархия моделей ПО. Удаление связей между моделями ПО', 'РАБОТА В СИСТЕМЕ. Иерархия моделей ПО. Удаление модели ПО', 'РАБОТА В СИСТЕМЕ. Управление шаблонами. Выбор актуальной версии шаблона',
                       'РАБОТА В СИСТЕМЕ. Управление шаблонами. Загрузка и обновление шаблона', 'РАБОТА В СИСТЕМЕ. Управление шаблонами. Создание шаблона', 'РАБОТА В СИСТЕМЕ. Управление шаблонами. Выгрузка шаблонов',
                       'РАБОТА В СИСТЕМЕ. Управление профилями. Создание профиля из списка профилей', 'РАБОТА В СИСТЕМЕ. Управление профилями. Копирование профиля', 'РАБОТА В СИСТЕМЕ. Управление профилями. Создание профиля через перечень шаблонов',
                       'РАБОТА В СИСТЕМЕ. Управление профилями. Редактирование требований профиля', 'РАБОТА В СИСТЕМЕ. Управление профилями. Переименование профиля', 'РАБОТА В СИСТЕМЕ. Управление профилями. Смена применимости профиля',
                       'РАБОТА В СИСТЕМЕ. Управление профилями. Активация профиля', 'РАБОТА В СИСТЕМЕ. Управление профилями. Архивация профиля', 'РАБОТА В СИСТЕМЕ. Управление профилями. Удаление профиля', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Добавление раздела',
                       'РАБОТА В СИСТЕМЕ. Управление требованиями. Переименование раздела', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Перемещение раздела', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Удаление раздела',
                       'РАБОТА В СИСТЕМЕ. Управление требованиями. Создание требования', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Добавление сведений', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Добавление применимости',
                       'РАБОТА В СИСТЕМЕ. Управление требованиями. Добавление данных сбора конфигурации', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Добавление данных анализа конфигурации', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Добавление данных исправления конфигурации',
                       'РАБОТА В СИСТЕМЕ. Управление требованиями. Добавление требования из Единого реестра требований', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Переименование требования', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Редактирование данных требования',
                       'РАБОТА В СИСТЕМЕ. Управление требованиями. Смена применимости требования', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Использование отметки «Черновик»', 'РАБОТА В СИСТЕМЕ. Управление требованиями. Удаление требования',
                       'РАБОТА В СИСТЕМЕ. Управление ресурсами. Добавление раздела', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Переименование раздела', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Перемещение раздела',
                       'РАБОТА В СИСТЕМЕ. Управление ресурсами. Удаление раздела', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Создание onlineресурса', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Создание offlineресурса',
                       'РАБОТА В СИСТЕМЕ. Управление ресурсами. Переименование ресурса', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Перемещение ресурса', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Редактирование данных ресурса',
                       'РАБОТА В СИСТЕМЕ. Управление ресурсами. Редактирование программной топологии', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Добавление экземпляра ПО', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Редактирование экземпляра ПО',
                       'РАБОТА В СИСТЕМЕ. Управление ресурсами. Импорт и экспорт ресурсов', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Удаление экземпляра ПО', 'РАБОТА В СИСТЕМЕ. Управление ресурсами. Удаление ресурса',
                       'Аудит конфигурации ПО. Создание области аудита', 'Аудит конфигурации ПО. Редактирование области аудита', 'Аудит конфигурации ПО. Задачи на аудит', 'Аудит конфигурации ПО. Запуск задачи',
                       'Аудит конфигурации ПО. Отмена задачи', 'Аудит конфигурации ПО. Просмотр отчета аудита', 'Аудит конфигурации ПО. Просмотр протокола аудита', 'Аудит конфигурации ПО. Завершение протокола аудита', 'Аудит конфигурации ПО. Удаление области аудита']
    try:
        best_option = multi_qu(question, find_best_cos_sim(question, real_categories, model), multi_q)
    except RuntimeError: 
        print(question, real_categories)
        best_option = find_best_cos_sim(question, real_categories, model)[0]
    context = find_context(best_option.lower(), full_text)
    return answer_generate(question, context, history), find_picture(context), best_option

if __name__=='__main__':
    response()
